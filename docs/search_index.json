[["data-scientist-first-step.html", "Chapter 12 Data Scientist First Step 12.1 Loading Nobel Laureates Dataset 12.2 Workflow 12.3 Column Names 12.4 Missing Data (NA values) 12.5 Data Preprocessing 12.6 Exploratory Analysis 12.7 Exercises", " Chapter 12 Data Scientist First Step Finally this chapter will demonstrate how you can make use of what you have learned from the previous chapters to perform an exploratory data analysis on the dataset you are interested in. Here we will look at a dataset of Nobel Laureates. Before you start, always remember to load necessary R libraries first. library(tidyverse) 12.1 Loading Nobel Laureates Dataset my_df &lt;- read_csv(&quot;demo_data/data-nobel-laureates.csv&quot;) my_df 12.2 Workflow 12.3 Column Names Before we start, it is clear to see that the column names are full of spaces, which we would like to get rid off. So first, we remove all the spaces in the columns and replace them with _: # original column names names(my_df) [1] &quot;Year&quot; &quot;Category&quot; &quot;Prize&quot; [4] &quot;Motivation&quot; &quot;Prize Share&quot; &quot;Laureate ID&quot; [7] &quot;Laureate Type&quot; &quot;Full Name&quot; &quot;Birth Date&quot; [10] &quot;Birth City&quot; &quot;Birth Country&quot; &quot;Sex&quot; [13] &quot;Organization Name&quot; &quot;Organization City&quot; &quot;Organization Country&quot; [16] &quot;Death Date&quot; &quot;Death City&quot; &quot;Death Country&quot; # overwrite the original with new ones names(my_df) &lt;- str_replace_all(names(my_df), &quot;\\\\s&quot;,&quot;_&quot;) # autoprint updated my_df my_df names(my_df) [1] &quot;Year&quot; &quot;Category&quot; &quot;Prize&quot; [4] &quot;Motivation&quot; &quot;Prize_Share&quot; &quot;Laureate_ID&quot; [7] &quot;Laureate_Type&quot; &quot;Full_Name&quot; &quot;Birth_Date&quot; [10] &quot;Birth_City&quot; &quot;Birth_Country&quot; &quot;Sex&quot; [13] &quot;Organization_Name&quot; &quot;Organization_City&quot; &quot;Organization_Country&quot; [16] &quot;Death_Date&quot; &quot;Death_City&quot; &quot;Death_Country&quot; 12.4 Missing Data (NA values) It is always important to check if the information of each row is complete. We first define a function check_num_NA(), which checks the number of NA values of the input x object We then map() this self-defined function to each column of the my_df # define a function check_num_NA &lt;- function(x){ x %&gt;% is.na %&gt;% sum } # map the function to the data frame my_df %&gt;% map_df(check_num_NA) ## Alternatively, you can write this way: # map_df(my_df, check_num_NA) From the above results, we see that Sex column has 26 cases of NA values. We can check rows with NAâ€™s by filtering out these cases: my_df %&gt;% filter(is.na(Sex)) 12.5 Data Preprocessing Usually before we proceed with the data analysis, we need to preprocess the data to make sure that the data is prepared in an appropriate way for later quantitative (statistical) analysis. my_df %&gt;% filter(Birth_Country == &quot;China&quot;) my_df %&gt;% select(Year, Full_Name, Birth_Date, Category) Common considerations may include: We lower all character vectors (i.e., normalizing the letter casing) We identify duplicate tokens in our dataset We create new columns (that may better reflect the factors we would like to investigate): Decade Prize_Age nobel_winners &lt;- my_df %&gt;% mutate_if(is.character, tolower) %&gt;% # lower all character vectors distinct_at(vars(Full_Name, Year, Category), .keep_all = TRUE) %&gt;% mutate(Decade = 10 * (Year %/% 10), Prize_Age = Year - lubridate::year(Birth_Date)) nobel_winners Given two positive integers, normally, we define the division as follows: a / b in R. There are two variants of the integer division: a %% b (a modulo b): This modulo operation will return the remainder of the division (The expression 5 %% 3 would evaluate to 2). a %/% b: This integer division operation will return the quotient of the division (The expression 5 %/% 3 would evaluate to 1). We often use this modulo operation to check if an output value is a multiple of a specific integer. We can check if our new Prize_Age has any NA values? nobel_winners %&gt;% filter(is.na(Prize_Age)) %&gt;% select(Year, Full_Name, Birth_Date, Prize_Age) Check Chinese laureates again: nobel_winners %&gt;% filter(Birth_Country == &quot;china&quot;) %&gt;% select(Full_Name, Year, Category) 12.6 Exploratory Analysis In this section, we will see how we can create relevant statistics/graphs for the research questions we are interested in. 12.6.1 Discipline Distribution RQ: How many laureates were there in different disciplines? # statistics nobel_winners %&gt;% count(Category) %&gt;% mutate(percent = round(n/sum(n),2)) # barplots nobel_winners %&gt;% count(Category) %&gt;% ggplot(aes(x = Category, y = n, fill = Category)) + geom_col() + geom_text(aes(label = n), vjust = -0.25) + labs(title = &quot;No. of Laureates in Different Disciplines&quot;, x = &quot;Category&quot;, y = &quot;N&quot;) + theme(legend.position = &quot;none&quot;) # barplots (ordered) nobel_winners %&gt;% count(Category) %&gt;% ggplot(aes(x = fct_reorder(Category, -n), y = n, fill = Category)) + geom_col() + geom_text(aes(label = n), vjust = -0.25) + labs(title = &quot;No. of Laureates in Different Disciplines&quot;, x = &quot;Category&quot;, y = &quot;N&quot;) + theme(legend.position = &quot;none&quot;) An even more dynamic graph: # barplot (dynamic) library(gganimate) #install.packages(&quot;gganimate&quot;, dependencies = T) my_df %&gt;% count(Category) %&gt;% mutate(Category = fct_reorder(Category, -n)) %&gt;% ggplot(aes(x = Category, y = n, fill = Category)) + geom_text(aes(label = n), vjust = -0.25) + geom_col()+ labs(title = &quot;No. of Laureates in Different Disciplines&quot;, x = &quot;Category&quot;, y = &quot;N&quot;) + theme(legend.position = &quot;none&quot;) + transition_states(Category) + shadow_mark(past = TRUE) 12.6.2 Age Distribution RQ: At what age did laureates normally win their Nobel Prizes? # statistics summary(nobel_winners$Prize_Age) Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s 17.00 50.00 60.00 59.45 69.00 90.00 30 psych::describe(nobel_winners$Prize_Age) %&gt;% t X1 vars 1.00000000 n 881.00000000 mean 59.45175936 sd 12.41297890 median 60.00000000 trimmed 59.50496454 mad 13.34340000 min 17.00000000 max 90.00000000 range 73.00000000 skew -0.04907038 kurtosis -0.44875709 se 0.41820389 # histogram nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% ggplot(aes(x = Prize_Age)) + geom_histogram(color=&quot;white&quot;) # boxplot nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% ggplot(aes(y = Prize_Age)) + geom_boxplot() 12.6.3 Category x Age Interaction RQ: Does the age of prize-winning vary for different prize categories? # Statistics nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% group_by(Category) %&gt;% summarize(mean_age = mean(Prize_Age), sd_age = sd(Prize_Age)) %&gt;% ungroup %&gt;% arrange(mean_age) # Histogram nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% ggplot(aes(x = Prize_Age, fill = Category, color = Category)) + geom_histogram(color=&quot;white&quot;) + facet_wrap(~Category) + theme(legend.position = &quot;none&quot;) # Density graphs nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% ggplot(aes(x = Prize_Age, fill = Category, color = Category)) + geom_density() + facet_wrap(~Category) + theme(legend.position = &quot;none&quot;) # boxplot nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% ggplot(aes(x = Category, y = Prize_Age, fill = Category))+ geom_boxplot(notch=T) # mean and CI plots nobel_winners %&gt;% filter(!is.na(Prize_Age)) %&gt;% ggplot(aes(Category, Prize_Age, fill = Category)) + stat_summary(fun = mean, geom = &quot;bar&quot;, fill=&quot;white&quot;, color=&quot;black&quot;) + stat_summary(fun.data = function(x) mean_se(x, mult = 1.96), geom = &quot;errorbar&quot;, width = 0.1, color=&quot;grey40&quot;) 12.6.4 Gender Distribution RQ: What is the gender distribution of Nobel winners? # statistics nobel_winners %&gt;% filter(!is.na(Sex)) %&gt;% count(Sex) %&gt;% mutate(percent = round(n/sum(n),2)) # graphs nobel_winners %&gt;% filter(!is.na(Sex)) %&gt;% ggplot(aes(Sex)) + geom_bar(fill=&quot;white&quot;,color=&quot;black&quot;) 12.6.5 Age x Gender Interaction Did the ages differ greatly for male and female winners? # statistics nobel_winners %&gt;% filter(!is.na(Sex) &amp; !is.na(Prize_Age)) %&gt;% group_by(Sex) %&gt;% summarize(mean_prize_age = mean(Prize_Age), sd_prize_age = sd(Prize_Age), min_prize_age = min(Prize_Age), max_prize_age = max(Prize_Age), N = n()) -&gt; sum_sex_age sum_sex_age As for visualization, we can create boxplots for male and female winners. nobel_winners %&gt;% filter(!is.na(Sex) &amp; !is.na(Prize_Age)) %&gt;% ggplot(aes(Sex, Prize_Age, fill=Sex)) + geom_boxplot(notch=T, color=&quot;grey30&quot;) + scale_fill_manual(values = c(&quot;lightpink&quot;,&quot;lightblue&quot;)) Or alternatively, we can create the mean and confidence interval plots for each sex. #require(Hmisc) # you have to have this for `stat_summary()` nobel_winners %&gt;% filter(!is.na(Sex) &amp; !is.na(Prize_Age)) %&gt;% ggplot(aes(Sex, Prize_Age, color=Sex)) + stat_summary(fun = mean, geom = &quot;point&quot;, size = 2) + stat_summary(fun.data = function(x) mean_se(x, mult=1.96), geom = &quot;errorbar&quot;, width = 0.1) We can create an informative graph showing not only the mean ages of male and female winners, but also their respective minimum and maxinum ages. sum_sex_age %&gt;% pivot_longer(cols = c(&quot;mean_prize_age&quot;,&quot;min_prize_age&quot;, &quot;max_prize_age&quot;), names_to = &quot;Prize_Age&quot;, values_to = &quot;Age&quot;) %&gt;% mutate(Prize_Age = str_replace_all(Prize_Age, &quot;_prize_age$&quot;,&quot;&quot;)) %&gt;% ggplot(aes(Sex, Age, fill=Prize_Age)) + geom_bar(stat=&quot;identity&quot;, width = 0.8, color=&quot;white&quot;, position = position_dodge(0.8)) 12.7 Exercises Exercise 12.1 Create a subset of nobel_winners, which includes only winners who won the prizes more than once and in more than one category. Exercise 12.2 Please create a data frame of summary statistics, which shows us the distributions of male and female winners in different categories as shown below. Also, please show the number of males and females as well as the proportions for each prize category. (i.e., frequencies and normalizaed frequencies) Exercise 12.3 Please show us the states distribution of the US Nobel Winners. This would give us an idea which state in the United States has the most Nobel winners. For US winners, you can extract their birth states from their birth cities (using regular expressions of course): nobel_winners %&gt;% filter(Birth_Country == &quot;united states of america&quot;) %&gt;% select(Year, Category, Full_Name, Birth_City) Exercise 12.4 Following Exercise 12.3, can you include the full names of states in the above table by adding another column? In the demo-data/US-states-csv, you can find a csv with the mapping between states abbreviations and their full names. The US-states.csv dataset US_states &lt;- read_csv(&quot;demo_data/US-states.csv&quot;) US_states "]]
